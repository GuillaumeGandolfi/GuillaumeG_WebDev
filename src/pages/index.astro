---
import BaseLayout from '../layouts/BaseLayout.astro';

import '../assets/css/hero.css';
import '../assets/css/about.css';
---

<BaseLayout title="Accueil | Mon Site Perso">
  <section class="hero">
    <div class="hero-container">
      <h1 class="hero-title">
        Bonjour, je suis <span class="highlight">Guillaume</span>,
        <span id="animated-text" aria-live="polite" data-words='["Développeur Web", "Designer Créatif", "Passionné de Technologie"]'></span>
      </h1>
      
      
      <p class="hero-subtitle">Je crée des expériences web modernes, rapides et dynamiques.</p>
      <a href="#projects" class="hero-cta" aria-label="Voir mes projets">Voir mes projets</a>
    </div>
    <div class="hero-background"></div>
  </section>

  <section class="about-me" id="about">
    <div class="about-container">
      <h2>À Propos de Moi</h2>
      <p>
        Passionné par le développement web, je crée des expériences modernes et dynamiques.
        Avec une expertise en HTML, CSS et JavaScript, je transforme des idées en sites fonctionnels
        et attrayants. Toujours curieux, j'apprends constamment de nouvelles technologies pour
        repousser mes limites.
      </p>
      <p>
        Mon objectif ? Collaborer pour concevoir des solutions web qui ont un impact. Créons ensemble quelque chose d'incroyable !
      </p>
    </div>
  </section>
  
</BaseLayout>

<script>
// @ts-nocheck
document.addEventListener('DOMContentLoaded', () => {
  document.querySelectorAll('[data-words]').forEach((animatedText) => {
    const words = JSON.parse(animatedText.getAttribute('data-words'));
    let wordIndex = 0;
    let charIndex = 0;
    let isDeleting = false;

    function typeEffect() {
      const currentWord = words[wordIndex];

      if (charIndex === 0 && !isDeleting) {
        animatedText.style.visibility = "visible";
        animatedText.style.opacity = "1";
      }

      if (!isDeleting) {
        animatedText.textContent = currentWord.slice(0, ++charIndex);
        if (charIndex === currentWord.length) {
          isDeleting = true;
          setTimeout(typeEffect, 1000);
          return;
        }
      } else {
        animatedText.textContent = currentWord.slice(0, --charIndex);
        if (charIndex === 0) {
          isDeleting = false;
          wordIndex = (wordIndex + 1) % words.length;
        }
      }

      setTimeout(typeEffect, isDeleting ? 100 : 200);
    }

    animatedText.textContent = "";

    setTimeout(() => {
      typeEffect();
    }, 500);
  });
});

document.addEventListener('DOMContentLoaded', () => {
  const paragraphs = document.querySelectorAll('.about-container p');

  const revealOnScroll = () => {
    const triggerPoint = window.innerHeight / 1.2;

    paragraphs.forEach((p) => {
      const top = p.getBoundingClientRect().top;

      if (top < triggerPoint) {
        p.classList.add('visible');
      }
    });
  };

  window.addEventListener('scroll', revealOnScroll);
});


</script>
